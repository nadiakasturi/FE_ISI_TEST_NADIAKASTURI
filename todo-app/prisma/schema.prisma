datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Log {
  id        Int      @id @default(autoincrement())
  action    String
  userId    Int
  entityId  Int
  entity    String
  createdAt DateTime @default(now())

  user      User   @relation("UserLogs", fields: [userId], references: [id])
}

model User {
  id            Int    @id @default(autoincrement())
  username      String @unique
  password      String
  email         String @unique
  role          String
  teamId        Int? 
  team          Team?  @relation(fields: [teamId], references: [id])
  tasksCreated  Task[] @relation("CreatedTasks")
  tasksAssigned Task[] @relation("AssignedTasks")
  logs          Log[]  @relation("UserLogs")
}

model Team {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
  tasks Task[] @relation("TeamTasks")
  assignedTasks Task[] @relation("AssignedTeamTasks")
}

model Task {
  id                Int      @id @default(autoincrement())
  title             String
  description       String
  status            String
  createdBy         Int
  assignedToUserId  Int?
  teamId            Int?
  assignedToTeamId  Int?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  createdByUser     User  @relation("CreatedTasks", fields: [createdBy], references: [id])
  assignedToUser    User? @relation("AssignedTasks", fields: [assignedToUserId], references: [id])
  team              Team? @relation("TeamTasks", fields: [teamId], references: [id])
  assignedToTeam    Team? @relation("AssignedTeamTasks", fields: [assignedToTeamId], references: [id])

  @@index([teamId])
  @@index([assignedToTeamId])
}
